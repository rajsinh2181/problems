Example 1
Input:
N = 4
Arr = {1, 3, 5, 6}
k = 5
Output: 2
Explaination: Since 5 is found at index 2 
as Arr[2] = 5, the output is 2.

Example 2:
Input:
N = 4
Arr = {1, 3, 5, 6}
k = 2
Output: 1
Explaination: Since 2 is not present in 
the array but can be inserted at index 1 
to make the array sorted.

Example 3:
Input: nums = [1,3,5,6], target = 7
Output: 4

int searchInsertK(vector<int>v, int n, int x)
    {
    //binary  search logic
        int l = 0, r = n-1;
        int mid;
        while ( l < r) { 
            mid = (l + r) / 2;
            if(v[mid] > x) r = mid - 1;
            else if(v[mid] < x) l = mid + 1;
            else return mid;   
        }
        //if element is not found 
        //we check if it is larger than largest element then return 
        //length of vector or return the l pointer
        return v[l]<x ? l+1 : l;
    }
